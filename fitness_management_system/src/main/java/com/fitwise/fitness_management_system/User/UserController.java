package com.fitwise.fitness_management_system.User;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
//import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller
@RequestMapping(path="/user")
public class UserController {

  @Autowired // This means to get the bean called userRepository
         // Which is auto-generated by Spring, we will use it to handle the data
  private UserRepository userRepository;

  @PostMapping(path="/add") // Map ONLY POST Requests
  public String addNewUser(@ModelAttribute User user, Model model){
    model.addAttribute("user", user);
    userRepository.save(user);
    // return "success";
    return "redirect:/user/all";
  }

  // @PostMapping(path="/add") // Map ONLY POST Requests
  // public @ResponseBody String addNewUser(
  //       @RequestParam String name,
  //       @RequestParam String email,
  //       @RequestParam String pswd,
  //       @RequestParam String pswd2,
  //       @RequestParam long phone,        
  //       @RequestParam int age,
  //       @RequestParam float height,
  //       @RequestParam float weight,
  //       @RequestParam Gender gender) {
  //   // @ResponseBody means the returned String is the response, not a view name
  //   // @RequestParam means it is a parameter from the GET or POST request

  //   User n = new User();
  //   n.set_name(name);
  //   n.set_email(email);
  //   n.set_phone(phone);
  //   n.set_password(pswd);
  //   n.set_age(age);
  //   n.set_height(height);
  //   n.set_weight(weight);
  //   n.set_gender(gender);
  //   userRepository.save(n);
  //   return "Saved";
  // }

  @GetMapping(path="/all")
  public @ResponseBody Iterable<User> getAllUsers() {
    // This returns a JSON or XML with the users
    return userRepository.findAll();
  }

  @GetMapping(path = "/register")
  public String getRegistrationPage(Model model) {
    model.addAttribute("user", new User());
    return "user_registration";
  }
  @GetMapping(path = "/login")
    public String getLoginPage(Model model) {
      return "user_login";
  }

  // @GetMapping(path = "/register/../style/user_registration.css")
  // public String getRegistrationStyle(Model model) {
  //     return new String();
  // }
  
  
}